{  "base_url": "http://www.gic-edu.com",  "levels": {},  "start_url": "http://www.gic-edu.com/",  "output_config": {    "fields": {      "provider_id": "206",      "language": "eng",      "product_type_id": {        "python": "product_type_id('Courses')"      },      "time_lock": "N",      "space_lock": "N",      "name": {        "xpath": "//td[@class='leftMargin']/div[1]/h1"      },      "product_image_url": [        {          "xpath": "//div[@itemprop='description']//img/@src",          "re": "http.*",          "type": "[str]"        },        {          "xpath": "//div[@itemprop='description']//img/@src",          "python": "urljoin('http://www.gic-edu.com/',data) if isinstance(data,str) else None"        }      ],      "product_video_url": {        "xpath": "//div[@itemprop='description']//iframe/@src",        "python": "urljoin('http:',data) if data else None"      },      "toc": {        "xpath": "//div[@class='TabbedPanelsContent TabbedPanelsContentVisible']"      },      "difficulty": {        "xpath": "//p[contains(./strong,'Level')]/text()",        "re": "\\w.*",        "python": "difficulty(data)"      },      "prerequisites": {        "xpath": "//p[contains(./strong,'Prerequisites:')]/text()",        "re": "\\w.*",        "python": "html_to_text(data)"      },      "description": [        {          "xpath": "substring-before(substring-after(//div[@itemprop='description'],'Description'),'Objective')",          "re": "\\w.*",          "python": "html_to_text(data)"        },        {          "xpath": "substring-before(substring-after(//div[@itemprop='description'],'escription'),'Program Outline')",          "re": "\\w.*",          "python": "html_to_text(data)"        },        {          "xpath": "substring-after(//div[@itemprop='description'],'escription')",          "re": "\\w.*",          "python": "html_to_text(data)"        },        {          "xpath": "string(//div[@itemprop='description'])",          "re": "\\w.*",          "python": "html_to_text(data)"        }      ],      "audience": [        {          "xpath": {            "value": [              "//div[contains(.,'Audience')]/following-sibling::div//text()[count(.|//div[contains(.,'Audience')]/following-sibling::span[contains(.,'Program Outline')]/preceding-sibling::div//text()) = count(//div[contains(.,'Audience')]/following-sibling::span[contains(.,'Program Outline')]/preceding-sibling::div//text())]",              "//div[contains(.,'Audience')]/following-sibling::div//text()[count(.|//div[contains(.,'Audience')]/following-sibling::div[contains(.,'Program Outline')]/preceding-sibling::div//text()) = count(//div[contains(.,'Audience')]/following-sibling::div[contains(.,'Program Outline')]/preceding-sibling::div//text())]",              "//div[contains(.,'Audience')]/following-sibling::div//text()[count(.|//div[contains(.,'Audience')]/following-sibling::div[contains(.,'After you attend')]/preceding-sibling::div//text()) = count(//div[contains(.,'Audience')]/following-sibling::div[contains(.,'After you attend')]/preceding-sibling::div//text())]",              "//span[contains(.,'Audience')]/following-sibling::text()[count(.|//span[contains(.,'Audience')]/following-sibling::span[contains(.,'Special Features:')]/preceding-sibling::text()) = count(//span[contains(.,'Audience')]/following-sibling::span[contains(.,'Special Features:')]/preceding-sibling::text())]",              "//p[contains(.,'Who Should Attend')]/following-sibling::p//text()[count(.|//p[contains(.,'Who Should Attend')]/following-sibling::p[contains(.,'Learning Outcomes')]/preceding-sibling::p//text()) = count(//p[contains(.,'Who Should Attend')]/following-sibling::p[contains(.,'Learning Outcomes')]/preceding-sibling::p//text())]",              "//h1[contains(.,'Who Should Attend')]/following-sibling::p//text()[count(.|//h1[contains(.,'Who Should Attend')]/following-sibling::h1[contains(.,'Learning Objectives')]/preceding-sibling::p//text()) = count(//h1[contains(.,'Who Should Attend')]/following-sibling::h1[contains(.,'Learning Objectives')]/preceding-sibling::p//text())]",              "//span[contains(.,'Audience')]/following-sibling::text()[count(.|//span[contains(.,'Audience')]/following-sibling::span[contains(.,'After you attend')]/preceding-sibling::text()) = count(//span[contains(.,'Audience')]/following-sibling::span[contains(.,'After you attend')]/preceding-sibling::text())]",              "//span[contains(./div//span,'Target Audience')]/following-sibling::div//text()[count(.|//span[contains(./div//span,'Target Audience')]/following-sibling::div[contains(.,'Program Outline')]/preceding-sibling::div//text()) = count(//span[contains(./div//span,'Target Audience')]/following-sibling::div[contains(.,'Program Outline')]/preceding-sibling::div//text())]",              "//span[contains(.,'Audience')]/following-sibling::text()[count(.|//span[contains(.,'Audience')]/following-sibling::span[contains(.,'Learning Objectives')]/preceding-sibling::text()) = count(//span[contains(.,'Audience')]/following-sibling::span[contains(.,'Learning Objectives')]/preceding-sibling::text())]",              "//p[contains(.,'Who Should Attend')]/following-sibling::p//text()[count(.|//p[contains(.,'Who Should Attend')]/following-sibling::p[contains(.,'Outcomes')]/preceding-sibling::p//text()) = count(//p[contains(.,'Who Should Attend')]/following-sibling::p[contains(.,'Outcomes')]/preceding-sibling::p//text())]",              "//span[contains(.,'Audience')]/following-sibling::span//text()[count(.|//span[contains(.,'Audience')]/following-sibling::span[contains(.,'After you attend')]/preceding-sibling::span//text()) = count(//span[contains(.,'Audience')]/following-sibling::span[contains(.,'After you attend')]/preceding-sibling::span//text())]",              "//p[contains(.,'Audience')]/following-sibling::p//text()[count(.|//p[contains(.,'Audience')]/following-sibling::p[contains(.,'Course Objectives:')]/preceding-sibling::p//text()) = count(//p[contains(.,'Audience')]/following-sibling::p[contains(.,'Course Objectives:')]/preceding-sibling::p//text())]",              "//p[@dir='ltr'][contains(.,'Audience')]/following-sibling::p[1]//text()",              "//td[@class]/p[contains(.,'Audience')]/following-sibling::p[1]//text()",              "substring-before(//p[contains(.,'Audience')]/following-sibling::p[1],'Course Outline')",              "substring-before(//p[contains(.,'audience')]/following-sibling::div[1],'Program outline')",              "substring-after(//p[contains(.//strong,'Audience')],'Audience')",              "substring-after(//div[contains(./font/span,'Target Audience')],'Audience')",              "substring-after(//p[contains(.//span,'Audience')],'Audience')",              "substring-after(//div[contains(.//span,'Audience')],'Audience')",              "//p[contains(./span,'Audience')]/following-sibling::ul[1]//text()",              "//p[contains(./span,'Audience')]/following-sibling::div[1]//text()",              "//div[contains(.//span,'Audience')]/following-sibling::div[2]//text()",              "//*[contains(.,'udience')]/following-sibling::*[1]//text()",              "substring-before(substring-after(//div[@itemprop='description'],'Who Should Attend'),'Course Outcomes')",              "substring-before(substring-after(//div[@itemprop='description'],'Target Audience'),'Special Features:')",              "substring-before(substring-after(//div[@itemprop='description'],'Who Should Attend'),'Learning')",              "substring-before(substring-after(//div[@itemprop='description'],'Who Should Attend'),'After participating in the seminar')"            ],            "operator": "or"          },          "re": "\\w.*",          "python": "html_to_text(data)"        },        {          "xpath": {            "value": [              "//p[contains(.,'Audience')]/following-sibling::ul[1]//text()[count(.|//p[contains(.,'Audience')]/following-sibling::p[contains(.,'After Attending')]/preceding-sibling::ul//text()) = count(//p[contains(.,'Audience')]/following-sibling::p[contains(.,'After Attending')]/preceding-sibling::ul//text())]",              "//p[contains(.,'Audience')]/following-sibling::ul[1]//text()[count(.|//p[contains(.,'Audience')]/following-sibling::p[contains(.,'A basic understanding')]/preceding-sibling::ul//text()) = count(//p[contains(.,'Audience')]/following-sibling::p[contains(.,'A basic understanding')]/preceding-sibling::ul//text())]",              "//span[contains(.,'Audience')]/following-sibling::ul//text()[count(.|//span[contains(.,'Audience')]/following-sibling::span[contains(.,'Learning Outcomes')]/preceding-sibling::ul//text()) = count(//span[contains(.,'Audience')]/following-sibling::span[contains(.,'Learning Outcomes')]/preceding-sibling::ul//text())]",              "//span[contains(.,'Who Should Attend')]/following-sibling::ul//text()[count(.|//span[contains(.,'Who Should Attend')]/following-sibling::span[contains(.,'Course Outcomes')]/preceding-sibling::ul//text()) = count(//span[contains(.,'Who Should Attend')]/following-sibling::span[contains(.,'Course Outcomes')]/preceding-sibling::ul//text())]",              "//div[contains(.,'Audience')]/following-sibling::ul//text()[count(.|//div[contains(.,'Audience')]/following-sibling::p[contains(.,'Program Outline')]/preceding-sibling::ul//text()) = count(//div[contains(.,'Audience')]/following-sibling::p[contains(.,'Program Outline')]/preceding-sibling::ul//text())]",              "//p[contains(.,'Audience')]/following-sibling::ul//text()[count(.|//p[contains(.,'Audience')]/following-sibling::p[contains(.,'Program Outline')]/preceding-sibling::ul//text()) = count(//p[contains(.,'Audience')]/following-sibling::p[contains(.,'Program Outline')]/preceding-sibling::ul//text())]",              "//span[contains(.,'audience')]/following-sibling::ul//text()[count(.|//span[contains(.,'audience')]/following-sibling::span[contains(.,'At the end of')]/preceding-sibling::ul//text()) = count(//span[contains(.,'audience')]/following-sibling::span[contains(.,'At the end of')]/preceding-sibling::ul//text())]",              "//p[contains(./span,'Who Should Attend')]/following-sibling::ul[1]//li//text()",              "//span[contains(.//span,'Who Should Attend')]/following-sibling::span[1]//li//text()"            ],            "operator": "or"          },          "re": "\\w.*",          "type": "[str]"        }      ],      "instructors": {        "fields": {          "name": {            "xpath": ".//h2//text()"          },          "bio": {            "xpath": "string(./span)",            "python": "html_to_text(data)"          },          "image": {            "xpath": ".//img/@src"          }        },        "type": "[Instructor]",        "xpath": "//ul[contains(.,'Instructor')]/following-sibling::div//div[@class='TabbedPanelsContent TabbedPanelsContentVisible']"      },      "product_events": {        "fields": {          "duration_display": [            {              "xpath": "//div[contains(.,'Access Time')]/text()[contains(.,'day')]",              "re": "\\d.*"            },            {              "xpath": "//p[contains(.,'Estimated time to complete')]/text()",              "re": "\\d.*hours"            },            {              "xpath": "//p[contains(.,'Duration:')]/following-sibling::p[1]//text()",              "re": "\\d+\\sweeks"            }          ],          "duration_filter": [            {              "xpath": "//div[contains(.,'Access Time')]/text()[contains(.,'day')]",              "re": "\\d.*",              "python": "duration_filter(data)"            },            {              "xpath": "//p[contains(.,'Estimated time to complete')]/text()",              "re": "\\d.*hours",              "python": "duration_filter(data)"            },            {              "xpath": "//p[contains(.,'Duration:')]/following-sibling::p[1]//text()",              "re": "\\d+\\sweeks",              "python": "duration_filter(data)"            }          ],          "location_display": {            "xpath": "concat(substring('',contains(contains(//td[contains(.,'Address:')]/following-sibling::td[1],'This Distance'),contains(//td[contains(.,'Date:')]/following-sibling::td[1]/span[2]/text(),'-'))),substring(string(//td[contains(.,'Address:')]/following-sibling::td[1]/div/span),1 div contains(//td[contains(.,'Date:')]/following-sibling::td[1]/span[2]/text(),'-')))",            "python": "None if re.search('This|this|@',data) else data"          },          "location_name": {            "xpath": "string(//td[contains(.,'Address:')]/following-sibling::td[1]/div/span/text()[1])",            "python": "None if re.search('This|this|@',data) else data"          },          "location_addr": {            "xpath": "string(//td[contains(.,'Address:')]/following-sibling::td[1]/div/span/text()[2])"          },          "location_city": {            "xpath": "substring-before(//td[contains(.,'Address:')]/following-sibling::td[1]/div/span/text()[3],',')"          },          "location_state": {            "xpath": "substring-after(//td[contains(.,'Address:')]/following-sibling::td[1]/div/span/text()[3],',')",            "re": "[A-Z]{2}"          },          "start_date_local": {            "xpath": "string(//td[contains(.,'Date')]/following-sibling::td[1]/span[@itemprop='startDate'])",            "python": "convert_date(data)"          },          "end_date_local": {            "xpath": "string(//td[contains(.,'Date')]/following-sibling::td[1]/span[@itemprop='endDate'])",            "python": "convert_date(data)"          },          "price_currency": "CAD",          "price_display_float": {            "xpath": "substring-after(//h1/span[@id],'$')",            "re": "\\d.*"          },          "price_filter": {            "xpath": "substring-after(//h1/span[@id],'$')",            "re": "\\d.*"          },          "price_display_text": {            "xpath": "string(//div[@class='ContentBox'][1]//h1/following-sibling::span)"          }        },        "type": "[ProductEvent]"      }    },    "type": "Product",    "extractor_rules": {      "rules": [        "Rule(lxml(allow=('/courses.*category.*',),),follow=True)",        "Rule(lxml(allow=('/\\d+/.*',),restrict_xpaths=('//tr[contains(./@class,\\'gridrow\\')]/td[4]/a'),), callback='parse_product')"      ]    }  }}