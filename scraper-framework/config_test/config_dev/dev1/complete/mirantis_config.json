{
  "baseUrl": "http://training.mirantis.com",
  "levels": {
    "1": {
      "xpath": "./@href",
      "dont_filter": true
    },
    "1_1": {
      "xpath": "//table[contains(@class, 'class-schedule')]//td/a/@href",
      "level": "1",
      "dont_filter": true
    }
  },
  "start_url": "http://training.mirantis.com/openstack-courses",
  "output_config": {
    "fields": {
      "provider_name": "Mirantis",
      "provider_id": "156",
      "product_type_name": "Courses",
      "language": "eng",
      "space_lock": "Y",
      "time_lock": "Y",
      "name": {
        "xpath": "//div[@class='span12']/h2/text()",
        "level": "1"
      },
      "prod_image": {
        "xpath": "//img[contains(@class, 'content-photo')]/@src",
        "python": "urljoin('http://training.mirantis.com/', data)",
        "level": "1"
      },
      "audience": {
        "xpath": "//h4[contains(.,'udience')]/following-sibling::ul/li",
        "python": "' '.join([normalize_space(html2text.html2text(i)).replace('*', '') for i in data]) if isinstance(data,list) else normalize_space(html2text.html2text(data)).replace('*', '')",
        "level": "1"
      },
      "requirements": {
        "xpath": "//h4[contains(.,'equirements')]/following-sibling::ul/li",
        "python": "' '.join([normalize_space(html2text.html2text(i)).replace('*', '') for i in data]) if isinstance(data,list) else normalize_space(html2text.html2text(data)).replace('*', '')",
        "level": "1"
      },
      "prerequisites": {
        "xpath": "//h4[contains(.,'rerequisites')]/following-sibling::ul/li",
        "python": "' '.join([normalize_space(html2text.html2text(i)).replace('*', '') for i in data]) if isinstance(data,list) else normalize_space(html2text.html2text(data)).replace('*', '')",
        "level": "1"
      },
      "toc": {
        "xpath": "//div[@id='content-section-outline']/div[@class='content-section']/ul",
        "level": "1"
      },
      "description": {
        "xpath": "//div[@id='content-section-description']/div[@class='content-section']/p//text()",
        "python": "' '.join([normalize_space(html2text.html2text(i)) for i in data]) if isinstance(data,list) else data",
        "level": "1"
      },
      "product_events": {
        "fields": {
          "duration_display": {
            "xpath": "//li[contains(., 'uration')]/text()",
            "level": "1"
          },
          "duration_filter": {
            "xpath": "//li[contains(., 'uration')]/text()",
            "level": "1",
            "python": "duration_filter(data)"
          },
          "location_display": {
            "xpath": ".//div[@class='classHeading']/p[3]/text()",
            "python": "data if data else None"
          },
          "location_state": {
            "xpath": "substring-before(substring-after(.//div[@class='classHeading']/p[3]/text(), ','), ',')",
            "python": "data if data else None"
          },
          "location_city": {
            "xpath": "substring-before(.//div[@class='classHeading']/p[3]/text(), ',')",
            "python": "data if data else None"
          },
          "location_country": [
            {
              "xpath": "substring-after(substring-after(//div[@class='classHeading']/p[3]/text(), ','), ',')"
            },
            {
              "xpath": "substring-after(.//div[@class='classHeading']/p[3]/text(), ',')"
            }
          ],
          "price_currency": "USD",
          "price_display_float": {
            "xpath": "//div[@class='courseEventQuickInfo']/text()",
            "re": "\\d+\\.\\d+",
            "level": "1",
            "python": "min_price([i for i in data])"
          },
          "price_filter": {
            "xpath": "//div[@class='courseEventQuickInfo']/text()",
            "re": "\\d+\\.\\d+",
            "python": "min_price([i for i in data])",
            "level": "1"
          },
          "start_date_local": {
            "xpath": "substring-before(substring-after(.//div[@id='content-section-time']/div[@class='content-section']/p/text()[2], ','), '9:00')",
            "python": "convert_date(data + ' 09:00 PM')"
          },
          "end_date_local": [
            {
              "xpath": "substring-before(substring-after(.//div[@id='content-section-time']/div[@class='content-section']/p/text()[5], ','), '9:00')",
              "python": "convert_date(data + ' 05:00 PM')"
            },
            {
              "xpath": "substring-before(substring-after(.//div[@id='content-section-time']/div[@class='content-section']/p/text()[4], ','), '9:00')",
              "python": "convert_date(data + ' 05:00 PM')"
            },
            {
              "xpath": "substring-before(substring-after(.//div[@id='content-section-time']/div[@class='content-section']/p/text()[3], ','), '9:00')",
              "python": "convert_date(data + ' 05:00 PM')"
            },
            {
              "xpath": "substring-before(substring-after(.//div[@id='content-section-time']/div[@class='content-section']/p/text()[2], ','), '9:00')",
              "python": "convert_date(data + ' 05:00 PM')"
            }
          ]
        },
        "type": "[ProductEvent]",
        "xpath": "//div[@id='content']",
        "level": "1_1"
      }
    },
    "type": "Product",
    "xpath": "//div[@class='blurb']/h2/a"
  }
}