{
    "baseUrl": "http://www.ciscopress.com/",
    "levels": {
        "1_1": {
            "xpath": "//ul[@class='bibliography']/li[1]/a/@href",
            "dont_filter": true
        }
    },
    "start_url": "http://www.ciscopress.com/store/browse.asp",
    "output_config": {
        "fields": {
            "provider_name": "Cisco Press",
            "provider_id": "49",
            "language": "eng",
            "space_lock": "N",
            "time_lock": "N",
            "name": [
                {
                    "xpath": "string(//div[@id='bibCol']/h1/text())"
                },
                {
                    "xpath": "string(//div[@id='bibCol1']/h1/text())"
                }
            ],
            "product_type_name": {
                "xpath": "string(//div[contains(@class, 'buyOption')][1]/h3/text())",
                "python": "'Books' if 'Book' in data else 'Courses'"
            },
            "formats": {
                "xpath": "////div[contains(@class, 'buyOption')][1]//p[@class='zoomFormat']//span[@class='format']//text()",
                "python": "data if data else 'Video'",
                "type": "[str]"
            },
            "prod_image": {
                "xpath": "//div[@id='cover']/a[contains(@class, coverImage)]/img/@src",
                "python": "re.sub('&type=f', '', (urljoin('http://www.ciscopress.com/', data))) if data else None"
            },
            "preview_video": {
                "xpath": "//div[@id='vidBasket']/following-sibling::script/@src",
                "re": "ptgmedia[\\d.*\\w\\/\\-\\_]*"
            },
            "difficulty": [
                {
                    "xpath": "//div[@id='bssContent']//p/b[contains(., 'User Level')]/following-sibling::text()",
                    "re": "Beginner|Intermediate|Expert\\/?"
                },
                {
                    "xpath": "string(//div[@id='bssContent']//p/text()[contains(., 'Skill Level')])",
                    "re": "Beginner|Intermediate|Expert\\/?"
                }
            ],
            "description": [
                {
                    "xpath": "//div[@id='bssContent']//span[@id='bssMetaInformation']/following-sibling::*//text()",
                    "python": "' '.join(normalizeSpace(selector.extract())) if data else None"
                },
                {
                    "xpath": "string(//div[@id='bssContent']/div[contains(., 'Duration:')])"
                },
                {
                    "xpath": "string(//div[@id='bssContent']/div[contains(., 'Requirements:')])"
                },
                {
                    "xpath": "string(//div[@id='bssContent']/div[1])"
                }
            ],
            "requirements": [
                {
                    "xpath": "//div[@id='bssContent']/div[contains(., 'Requirements')]",
                    "re": "re.compile('Requirements</b>(.*)<b>Table of Content',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']/div[contains(., 'Requirements')]",
                    "re": "re.compile('Requirements</b>(.*)<b>TOC',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']/div[contains(., 'Requirements')]",
                    "re": "re.compile('Requirements</b>(.*)<b>Module 1:',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']/div[contains(., 'Requirements')]",
                    "re": "re.compile('Requirements</b>(.*)<b>Please Note',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']",
                    "re": "re.compile('Requirements</u>(.*)<u>Table of Content',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']/div[contains(., 'Requirements')]",
                    "re": "re.compile('Requirements</b>(.*)<b>Skill Level',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']/div[contains(., 'Requirements')]",
                    "re": "re.compile('Requirements(.*)',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                }
            ],
            "toc": [
                {
                    "xpath": "//div[@id='bssContent']//h3[contains(., 'Table of Contents')]/parent::div[1]",
                    "python": "re.sub('<h3>(.*)</h3>','',data)"
                },
                {
                    "xpath": "//div[@id='bssContent']",
                    "re": "re.compile('Table of contents(.*)About Live',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                },
                {
                    "xpath": "//div[@id='bssContent']",
                    "re": "re.compile('Table of contents(.*)',re.S)",
                    "python": "normalizeSpace(html2text.html2text(data)).replace('*','')"
                }
            ],
            "authors": {
                "fields": {
                    "name": {
                        "xpath": ".//div[@class='clearfix']/h1//text()"
                    },
                    "bio": {
                        "xpath": ".//div[@class='clearfix']/h1/following-sibling::*//text()",
                        "python": "' '.join(normalizeSpace(selector.extract())) if data else None"
                    },
                    "image": {
                        "xpath": ".//div[@class='clearfix']/img/@src"
                    },
                    "link": {
                        "xpath": "//ul[@class='bibliography']/li[1]/a/@href",
                        "python": "urljoin('http://www.adobepress.com', data) if data else None",
                        "level": "1"
                    }
                },
                "type": "[Author]",
                "xpath": "//div[@id='contentAuthors']",
                "level": "1_1"
            },
            "publisher": {
                "fields": {
                    "name": {
                        "xpath": "//ul[@class='bibliography']/li[2]/a[1]/text()"
                    },
                    "link": {
                        "xpath": "//ul[@class='bibliography']/li[2]/a[1]/@href"
                    }
                },
                "type": "[Publisher]",
                "xpath": "//ul[@class='bibliography']/li[2]"
            },
            "published_date": {
                "xpath": "//ul[@class='bibliography']/li[2]/text()[1]",
                "python": "convertDate(re.sub('Published|by','',data))"
            },

            "product_events": {
                "fields": {
                    "duration_filter": [
                        {
                            "xpath": "string(//div[@id='bssContent']//b[contains(., 'of Video')])",
                            "re": "(\\d+(?:\\+)?(?: )+(?:Hours|HR|Minutes)+)",
                            "python": "duration_filter(data)"

                        },
                        {
                            "xpath": "string(//div[@id='bssContent'][contains(., 'of Video')])",
                            "re": "(\\d+(?:\\+)?(?: )+(?:Hours|HR|Minutes)+)",
                            "python": "duration_filter(data)"

                        }
                    ],
                    "duration_display": [
                        {
                            "xpath": "string(//div[@id='bssContent']//b[contains(., 'of Video')])",
                            "re": "(\\d+(?:\\+)?(?: )+(?:Hours|HR|Minutes)+)"

                        },
                        {
                            "xpath": "string(//div[@id='bssContent'][contains(., 'of Video')])",
                            "re": "(\\d+(?:\\+)?(?: )+(?:Hours|HR|Minutes)+)"

                        },
                        {
                            "xpath": "//span[@id='bssMetaInformation']//li[contains(., 'Pages')]",
                            "re": "\\d+"

                        }
                    ],
                    "price_currency": "USD",
                    "price_display_float": {
                        "xpath": "//div[contains(@class, 'buyOption')]/ul[@class='uppPricing']/li[contains(., 'Your Price')]",
                        "python": "getPriceFloat(minPriceText(normalizeSpace(selector.extract())))"
                    },
                    "price_filter": {
                        "xpath": "//div[contains(@class, 'buyOption')]/ul[@class='uppPricing']/li[contains(., 'Your Price')]",
                        "python": "getPriceFloat(minPriceText(normalizeSpace(selector.extract())))"
                    }
                },
                "type": "[ProductEvent]"
            }
        },
        "type": "[Product]" ,
        "extractorRules": {
            "rules": "[Rule(lxml(allow=('.*'),restrict_xpaths=('//table[@id=\\'allProdlist\\']//td[@class=\\'txt\\']/a')), callback='parseItemExtractors'), Rule(lxml(allow=('/store/browse.asp.*')), follow=True)]"
        }
    }
}