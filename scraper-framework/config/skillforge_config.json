{
  "base_url": "http://skillforge.com", 
  "start_url": "http://skillforge.com/courses/", 
  "levels": {
    "1_1": {
      "xpath": "//span[@class='registration_link']/a/@href"
    }
  }, 
  "output_config": {
    "fields": {
      "provider_id": "330", 
      "product_type_id": {
        "python": "product_type_id('Courses')"
      }, 
      "time_lock": "N", 
      "space_lock": "N", 
      "description": {
        "xpath": "//h4[contains(.,'Description')]/following-sibling::p//text()[count(.|//h4[contains(.,'Description')]/following-sibling::h4[1]/preceding-sibling::p//text()) = count(//h4[contains(.,'Description')]/following-sibling::h4[1]/preceding-sibling::p//text())]", 
        "python": "''.join([normalize_space(html2text.html2text(i)) for i in data]) if isinstance(data,list) else data"
      }, 
      "name": {
        "xpath": "string(//h1)"
      }, 
      "toc": {
        "xpath": "//h4[contains(.,'Course Syllabus:')]/following-sibling::*"
      }, 
      "product_events": [
        {
          "fields": {
            "price_currency": "USD", 
            "end_date_local": {
              "xpath": "concat(//span[contains(.,'Date')]/following-sibling::span[1],' ',//span[contains(.,'End Time')]/following-sibling::span[1])", 
              "python": "convert_date(data) if data else None"
            }, 
            "language": "eng", 
            "start_date_local": {
              "xpath": "concat(//span[contains(.,'Date')]/following-sibling::span[1],' ',//span[contains(.,'Start Time')]/following-sibling::span[1])", 
              "python": "convert_date(data) if data else None"
            }, 
            "duration_filter": {
              "xpath": "string(//h4[contains(.,'Duration')]/following-sibling::*[1])", 
              "re": "\\d.*", 
              "level": "1", 
              "python": "duration_filter(data)"
            }, 
            "price_display_float": {
              "xpath": "string(//text()[contains(.,'Cost')]/following-sibling::span[1])", 
              "re": "\\d.*", 
              "level": "1", 
              "python": "get_price_float(data) if data else '0.00'"
            }, 
            "duration_display": {
              "xpath": "string(//h4[contains(.,'Duration')]/following-sibling::*[1])", 
              "re": "\\d.*", 
              "level": "1"
            }
          }, 
          "type": "[ProductEvent]", 
          "level": "1_1"
        }, 
        {
          "fields": {
            "price_display_float": {
              "xpath": "string(//text()[contains(.,'Cost')]/following-sibling::span[1])", 
              "re": "\\d.*", 
              "level": "1", 
              "python": "get_price_float(data) if data else '0.00'"
            }, 
            "price_currency": "USD", 
            "duration_filter": {
              "xpath": "string(//h4[contains(.,'Duration')]/following-sibling::*[1])", 
              "re": "\\d.*", 
              "level": "1", 
              "python": "duration_filter(data)"
            }, 
            "language": "eng", 
            "duration_display": {
              "xpath": "string(//h4[contains(.,'Duration')]/following-sibling::*[1])", 
              "re": "\\d.*", 
              "level": "1"
            }
          }, 
          "type": "[ProductEvent]"
        }
      ], 
      "audience": {
        "xpath": "//h4[contains(.,'Audience')]/following-sibling::p//text()[count(.|//h4[contains(.,'Audience')]/following-sibling::h4[1]/preceding-sibling::p//text()) = count(//h4[contains(.,'Audience')]/following-sibling::h4[1]/preceding-sibling::p//text())]", 
        "python": "''.join([normalize_space(html2text.html2text(i)) for i in data]) if isinstance(data,list) else data"
      }, 
      "prerequisites": [
        {
          "xpath": "//h4[contains(.,'Prerequisites')]/following-sibling::p//text()[count(.|//h4[contains(.,'Prerequisites')]/following-sibling::h4[1]/preceding-sibling::p//text()) = count(//h4[contains(.,'Prerequisites')]/following-sibling::h4[1]/preceding-sibling::p//text())]", 
          "python": "''.join([normalize_space(html2text.html2text(i)) for i in data]) if isinstance(data,list) else data"
        }, 
        {
          "xpath": "//h4[contains(.,'Prequisites')]/following-sibling::p//text()[count(.|//h4[contains(.,'Prequisites')]/following-sibling::h4[1]/preceding-sibling::p//text()) = count(//h4[contains(.,'Prequisites')]/following-sibling::h4[1]/preceding-sibling::p//text())]", 
          "python": "''.join([normalize_space(html2text.html2text(i)) for i in data]) if isinstance(data,list) else data"
        }
      ]
    }, 
    "type": "Product", 
    "extractor_rules": {
      "rules": "[ Rule(lxml(allow=('/courses/.*',),restrict_xpaths=('//div[@id=\\'shopp\\']/div[@class=\\'prod-name\\']/strong/a')), callback='parse_product'), Rule(lxml(allow=('/courses/.*',),allow_domains=('skillforge.com'),restrict_xpaths=('//ul[@class=\\'children\\']/li/a',)), follow=True) ]"
    }
  }
}